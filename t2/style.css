@font-face {
  font-family: 'LatoWeb';
  src: url('fonts/Lato-Regular.eot'); /* IE9 Compat Modes */
  src: url('fonts/Lato-Regular.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */
       url('fonts/Lato-Regular.woff2') format('woff2'), /* Modern Browsers */
       url('fonts/Lato-Regular.woff') format('woff'), /* Modern Browsers */
       url('fonts/Lato-Regular.ttf') format('truetype');
  font-style: normal;
  font-weight: normal;
  text-rendering: optimizeLegibility;
}

body {
  background-color: #1b2552;
  font-family: 'LatoWeb', sans-serif;

  position: relative;

  margin: 0px auto;
  width: 750px;

  perspective: 600px;
}

nav {
  text-align: center;
  margin-bottom: 20px;
}

nav a {
  border-radius: 0px 0px 15px 15px;
  display: inline-block;
  padding: 10px 30px;
}
nav a:link, nav a:visited {
  background-color: #141938;
  color: #ff5b5b;
  text-decoration: none;
}
nav a:hover, nav a:active {
  background-color: black;
  color: white;
}

section {
  background-color: #111423;
  border: 2px none green;
  border-radius: 30px;
  text-align: center;
  box-sizing: border-box;
  padding: 8px 15px;
  overflow: hidden;
  position: absolute;
}

section h2 {
  margin: 0px;
}

section.top {
  color: #6c79c7;
  text-align: center;
  width: 200px;
  height: 200px;
  top: 90px;
}

section.bottom {
  border: 2px solid #2f386d;
  color: #dddee0;
  text-align: center;
  width: 200px;
  height: 250px;
  top: 350px;
}
#frontEndCards, #backEndCards {
  margin-right: 2px;
}

#nextSection, #frontEndSection {
  left: 0px;
}
#scoreSection, #backEndSection {
  right: 0px;
}
#score {
  color: #e4c56a;
  margin-top: 33px;
  font-size: 3rem;
  font-weight: bold;
}
#livesLine {
  font-size: 1.5rem;
  font-weight: bold;
  margin-top: 27px;
  text-align: center;
}
div.heart {
  background-image: url('images/icons/heart.png');
  background-size: contain;
  display: inline-block;
  width: 32px;
  height: 32px;
  transition: transform 1s;
}
div.heart.gone {
  transform: translateY(50px);
}

#currentCardHolder {
  text-align: center;

  border: 1px dashed white;
  border-radius: 40px;

  width: 250px;
  height: 260px;

  position: absolute;
  left: 250px;
}

@keyframes feedbackAnimation {
  0% {
    opacity: 0.0;
    transform: translateY(100px);
  }
  20%, 70% {
    opacity: 1.0;
    transform: translateY(0px);
  }
  100% {
    opacity: 0.0;
    transform: translateY(-100px);
  }
}

#feedbackArea {
  text-align: center;
  position: absolute;
  top: 400px;
  left: 225px;
  width: 300px;
}
.feedback {
  animation: feedbackAnimation 1.5s both;
  position: absolute;
  width: 100%;
}
.feedback.correct {
  color: #1cea8f;
}
.feedback.wrong {
  color: #ff5b5b;
}
.outcome {
  font-size: 3rem;
}
.scoreChange {
  font-size: 1.5rem;
}

@keyframes slideIntoNext {
  from { transform: translateX(-300%); }
  to   { transform: translateX(0); }
}
@keyframes moveToFirst {
  from { transform: translateX(-82px); }
  to   { transform: translateX(0); }
}

@keyframes moveToHolder {
  from {
    border-radius: 10px;
    margin: 7px 5px;
    padding: 2px;
    width: 68px;
    height: 75px;
    transform: translate(-150px, 68px);
  }
  to {
    border-radius: 40px;
    margin: 0px;
    width: 100%;
    height: 100%;
    transform: translate(0, 0);
  }
}
@keyframes resizeFromHolder {
  from {
    border-radius: 40px;
    margin: 0px;
    width: 100%;
    height: 100%;
  }
  to {
    border-radius: 10px;
    margin: 7px 5px;
    padding: 2px;
    width: 68px;
    height: 75px;
  }
}
@keyframes resizeToHolderLogo {
  from {
    width: 55px;
    height: 55px;
  }
  to {
    width: 200px;
    height: 200px;
  }
}
@keyframes resizeFromHolderLogo {
  from {
    width: 200px;
    height: 200px;
  }
  to {
    width: 55px;
    height: 55px;
  }
}
@keyframes resizeToHolderName {
  from { font-size: 0.8em; }
  to   { font-size: 2em; }
}
@keyframes resizeFromHolderName {
  from { font-size: 2em; }
  to   { font-size: 0.8em; }
}

@keyframes makeRoom1 {
  from { transform: translateX(0); }
  to   { transform: translateX(82px); }
}
@keyframes makeRoom2 {
  from { transform: translateY(0); }
  to   { transform: translateY(93px); }
}
@keyframes makeRoom3 {
  from { transform: translateX(0); }
  to   { transform: translateX(-82px); }
}
@keyframes makeRoom4 {
  from { transform: translateX(0); }
  to   { transform: translateX(-100px); }
}

@keyframes moveToFrontEnd {
  from { transform: translate(0, 0); }
  to   { transform: translate(-234px, 329px); }
}
@keyframes moveToBackEnd {
  from { transform: translate(0, 0); }
  to   { transform: translate(316px, 328px); }
}

@keyframes scaleToZero {
  from { transform: scale(1.0); }
  to   { transform: scale(0.0); }
}

@keyframes indicateCorrect {
  0%   { border-color: #2f386d; }
  30%  { border-color: #1cea8f; }
  100% { border-color: #2f386d; }
}
@keyframes indicateIncorrect {
  0%   { border-color: #2f386d; }
  30%  { border-color: #ff5b5b; }
  100% { border-color: #2f386d; }
}

.logoCard {
  background-color: white;
  border-radius: 10px;
  margin: 7px 5px;
  padding: 2px;
  width: 68px;
  height: 75px;
}
.logoCard.moveToFirst {
  animation: 1s moveToFirst backwards !important;
}
.logoCard.disappear {
  animation: 0.5s scaleToZero forwards !important;
  transform-origin: 50% 50% !important;
}
section.makeRoom .logoCard {
  animation-duration: .5s;
  animation-fill-mode: forwards;
}
section.makeRoom .logoCard:nth-child(1) {
  animation-name: makeRoom1;
}
section.makeRoom .logoCard:nth-child(2) {
  animation-name: makeRoom2;
}
section.makeRoom .logoCard:nth-child(3) {
  animation-name: makeRoom3;
}
section.makeRoom .logoCard:nth-child(4) {
  animation-name: makeRoom4;
}
section .logoCard:nth-child(n+5) {
  display: none;
}
section.correct {
  animation: indicateCorrect 1s;
}
section.incorrect {
  animation: indicateIncorrect 1s;
}
#nextSection .logoCard {
  float: right;
  animation: 1s slideIntoNext backwards;
}
section.bottom .logoCard {
  float: left;
}
section.bottom .logoCard:nth-child(3),
section.bottom .logoCard:nth-child(4) {
  float: right;
}
.logoCard .logo {
  background-position: center;
  background-repeat: no-repeat;
  background-size: contain;
  width: 55px;
  height: 55px;
  margin: 2px auto 0px;
}
.logoCard .name {
  color: black;
  margin-top: 3px;
  font-size: 0.8em;
  font-weight: bold;
}

#currentCardHolder .logoCard {
  float: none;
  border-radius: inherit;
  margin: 0px;
  width: 100%;
  height: 100%;
  animation: 1s moveToHolder backwards;
  transform-origin: 0 0;
}
#currentCardHolder .logo {
  width: 200px;
  height: 200px;
  animation: 1s resizeToHolderLogo;
}
#currentCardHolder .logoCard .name {
  font-size: 2em;
  animation: 1s resizeToHolderName;
}
.logoCard.moveToFrontEnd, .logoCard.moveToBackEnd {
  position: relative;
  z-index: 10;
}
.logoCard.moveToFrontEnd {
  animation: 1s resizeFromHolder forwards,
             1s moveToFrontEnd forwards !important;
}
.logoCard.moveToBackEnd {
  animation: 1s resizeFromHolder forwards,
             1s moveToBackEnd forwards !important;
}
.logoCard.moveToFrontEnd .logo,
.logoCard.moveToBackEnd .logo {
  animation: 1s resizeFromHolderLogo forwards !important;
}
.logoCard.moveToFrontEnd .name,
.logoCard.moveToBackEnd .name {
  animation: 1s resizeFromHolderName forwards !important;
}

@keyframes questionAppear {
  0%   { transform: rotateX(-46deg) scaleX(0); }
  40%  { transform: rotateX(-46deg) scaleX(1); }
  100% { transform: rotateX(0deg); }
}
@keyframes questionDisappear {
  0%   { transform: rotateX(0deg); }
  40%  { transform: rotateX(-46deg) scaleX(1); }
  100% { transform: rotateX(-46deg) scaleX(0); }
}
@keyframes chosenAnswerToLeft {
  from { opacity: 1.0; transform: translateX(0px); }
  to   { opacity: 0.0; transform: translateX(-100px); }
}
@keyframes chosenAnswerToDown {
  from { opacity: 1.0; transform: translateY(0px); }
  to   { opacity: 0.0; transform: translateY(100px); }
}
@keyframes chosenAnswerToRight {
  from { opacity: 1.0; transform: translateX(0px); }
  to   { opacity: 0.0; transform: translateX(100px); }
}

@keyframes fadeOut {
  from { opacity: 1.0; }
  to   { opacity: 0.0; }
}

#questionArea {
  background-color: white;
  color: black;
  border-radius: 30px;
  position: absolute;
  padding: 2px 50px;
  box-sizing: border-box;
  top: 350px;
  height: 250px;
  width: 100%;
  transform-origin: bottom;
  display: none;
  overflow: hidden;
}
#questionArea.appear {
  display: block;
  animation: 1s questionAppear 1s backwards;
}
#questionArea.disappear {
  display: block;
  animation: 1s questionDisappear 1.5s forwards;
}
#questionArea.disappear > .answer:not(.chosen) {
  animation: 1s fadeOut forwards;
}
#questionArea.disappear > h2 {
  animation: 1s fadeOut .5s forwards;
}
#questionArea h2 {
  text-align: center;
  margin-bottom: 30px;
}
#questionArea .answer {
  font-size: 1.5rem;
  margin: 15px 2px;
  cursor: pointer;
}
#questionArea .answer:hover {
  font-weight: bold;
}
#questionArea .answer .dot {
  background-color: gray;
  border-radius: 100%;
  margin-right: 10px;
  float: left;
  width: 1.6rem;
  height: 1.6rem;
}
#questionArea .answer:hover .dot,
#questionArea .answer.chosen .dot {
  background-color: black;
}
#questionArea .dot::before {
  color: white;
}
#answer0 .dot::before {
  content: "⇦";
  margin: -5px 2px;
}
#answer1 .dot::before {
  content: "⇩";
  margin-left: 6px;
}
#answer2 .dot::before {
  content: "⇨";
  margin: -5px 2px;
}
.answer.chosen {
  animation-delay: .5s;
  animation-duration: 1s;
  animation-fill-mode: forwards;
  font-weight: bold;
}
#answer0.chosen { animation-name: chosenAnswerToLeft; }
#answer1.chosen { animation-name: chosenAnswerToDown; }
#answer2.chosen { animation-name: chosenAnswerToRight; }

@keyframes disappearToRight {
  0% {
    opacity: 1.0;
    transform: translateX(0px);
  }
  70%, 100% {
    opacity: 0.0;
    transform: translateX(300px);
  }
}

@keyframes appearFromLeft {
  0% {
    opacity: 0.0;
    transform: translateX(-300px);
  }
  100% {
    opacity: 1.0;
    transform: translateX(0px);
  }
}

@keyframes gameEndedScoreMovement {
  0% {
    transform: translate(0px, 0px);
  }
  100% {
    transform: translate(-275px, 230px);
  }
}

@keyframes playAgainButtonAppear {
  from {
    visibility: visible;
    transform: translateY(0px);
  }
  to   {
    visibility: visible;
    transform: translateY(70px);
  }
}

.gameEndedMsg {
  display: none;
  font-size: 3em;
  margin-top: 200px;
  text-align: center;
  position: relative;
  z-index: 20;
}

body.gameEnded {
  overflow-x: hidden;
}

body.gameEnded section:not(#scoreSection),
body.gameEnded #currentCardHolder,
body.gameEnded #feedbackArea {
  animation: 1.5s disappearToRight forwards;
}

body.gameEnded #scoreSection {
  animation: 1.5s gameEndedScoreMovement forwards;
  z-index: 15;
}

body.gameWon #gameWonMsg {
  color: #1cea8f;
  display: block;
  animation: 1.5s appearFromLeft backwards;
}
body.gameOver #gameOverMsg {
  color: #ff5b5b;
  display: block;
  animation: 1.5s appearFromLeft backwards;
}

#playAgainButton {
  display: none;
  visibility: hidden;
}

body.gameEnded #playAgainButton {
  display: block;
  border-radius: 15px;
  padding: 10px 0px;
  text-align: center;
  font-size: 1.1rem;
  width: 200px;
  margin: 170px auto 0px;
  background-color: #141938;
  color: #1cea8f;
  animation: 1s playAgainButtonAppear 1.5s forwards;
  cursor: pointer;
}
body.gameEnded #playAgainButton:hover {
  background-color: black;
  color: white;
}
